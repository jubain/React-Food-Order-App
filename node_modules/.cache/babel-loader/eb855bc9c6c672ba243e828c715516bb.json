{"ast":null,"code":"import _slicedToArray from\"/Users/jubeenamatya/Desktop/Frontend/React Udemy /Food ordering web app/React-Food-Order-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/jubeenamatya/Desktop/Frontend/React Udemy /Food ordering web app/React-Food-Order-App/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/jubeenamatya/Desktop/Frontend/React Udemy /Food ordering web app/React-Food-Order-App/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var CartContext=/*#__PURE__*/createContext();var cartReducer=function cartReducer(state,action){var updatedTotalAmount;var existingCartItemIndex;var existingCartItem;var updatedItemsList;var updatedExistingItem;switch(action.type){case\"ADD_ITEM\"://concat gives brand new array without editing old array\nupdatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;// Finding index\nexistingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});// Getting element with above index\nexistingCartItem=state.items[existingCartItemIndex];// If a element exist\nif(existingCartItem){// update the element value in the item list\nupdatedExistingItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItemsList=_toConsumableArray(state.items);// update the item list\nupdatedItemsList[existingCartItemIndex]=updatedExistingItem;}else{updatedItemsList=state.items.concat(action.item);}return{items:updatedItemsList,totalAmount:updatedTotalAmount};case\"REMOVE_ITEM\":existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});existingCartItem=state.items[existingCartItemIndex];// removing existing price from total amount\nupdatedTotalAmount=state.totalAmount-existingCartItem.price;if(existingCartItem.amount===1){// Remove amount \nupdatedItemsList=state.items.filter(function(item){return item.id!==action.id;});}else{// Decrease amount by 1\nupdatedExistingItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount-1});updatedItemsList=_toConsumableArray(state.items);// Update list with new item amount\nupdatedItemsList[existingCartItemIndex]=updatedExistingItem;}return{items:updatedItemsList,totalAmount:updatedTotalAmount};default:break;}return defaultCartState;};var defaultCartState={items:[],totalAmount:0};function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];function addItem(item){dispatchCartAction({type:\"ADD_ITEM\",item:item});}function removeItem(id){dispatchCartAction({type:\"REMOVE_ITEM\",id:id});}var value={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItem,removeItem:removeItem};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:props.children});}export default CartProvider;","map":{"version":3,"names":["createContext","useReducer","CartContext","cartReducer","state","action","updatedTotalAmount","existingCartItemIndex","existingCartItem","updatedItemsList","updatedExistingItem","type","totalAmount","item","price","amount","items","findIndex","id","concat","filter","defaultCartState","CartProvider","props","cartState","dispatchCartAction","addItem","removeItem","value","children"],"sources":["/Users/jubeenamatya/Desktop/Frontend/React Udemy /Food ordering web app/React-Food-Order-App/src/store/CartProvider.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const CartContext = createContext()\n\nconst cartReducer = (state, action) => {\n    let updatedTotalAmount\n    let existingCartItemIndex\n    let existingCartItem\n    let updatedItemsList\n    let updatedExistingItem\n    switch (action.type) {\n        case \"ADD_ITEM\":\n            //concat gives brand new array without editing old array\n            updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n            // Finding index\n            existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id)\n            // Getting element with above index\n            existingCartItem = state.items[existingCartItemIndex]\n            // If a element exist\n            if (existingCartItem) {\n                // update the element value in the item list\n                updatedExistingItem = {\n                    ...existingCartItem, amount: existingCartItem.amount + action.item.amount\n                }\n                updatedItemsList = [...state.items]\n                // update the item list\n                updatedItemsList[existingCartItemIndex] = updatedExistingItem\n            } else {\n                updatedItemsList = state.items.concat(action.item)\n            }\n            return {\n                items: updatedItemsList,\n                totalAmount: updatedTotalAmount\n            }\n\n        case \"REMOVE_ITEM\":\n            existingCartItemIndex = state.items.findIndex(item => item.id === action.id)\n            existingCartItem = state.items[existingCartItemIndex]\n            // removing existing price from total amount\n            updatedTotalAmount = state.totalAmount - existingCartItem.price\n            if (existingCartItem.amount === 1) {\n                // Remove amount \n                updatedItemsList = state.items.filter(item => item.id !== action.id)\n            } else {\n                // Decrease amount by 1\n                updatedExistingItem = { ...existingCartItem, amount: existingCartItem.amount - 1 }\n                updatedItemsList = [...state.items]\n                // Update list with new item amount\n                updatedItemsList[existingCartItemIndex] = updatedExistingItem\n            }\n            return {\n                items: updatedItemsList,\n                totalAmount: updatedTotalAmount\n            }\n        default:\n            break;\n    }\n    return defaultCartState\n}\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0,\n}\n\nfunction CartProvider(props) {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n    function addItem(item) {\n        dispatchCartAction({ type: \"ADD_ITEM\", item: item })\n    }\n    function removeItem(id) {\n        dispatchCartAction({ type: \"REMOVE_ITEM\", id: id })\n    }\n\n    const value = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItem,\n        removeItem: removeItem\n    }\n\n\n    return <CartContext.Provider value={value}>\n        {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}